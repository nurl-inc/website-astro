---
const errors = { email: "" };

const isValidEmail = (email: string) => {
  return String(email)
    .toLowerCase()
    .match(
      /^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|.(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,
    );
};

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const gotcha = formData.get("gotcha");
    const email = formData.get("email") as string;

    if (gotcha) {
      errors.email += "You gon' get you spam bot!";
    }

    if (typeof email !== "string" || !isValidEmail(email)) {
      errors.email += "Email is not valid. ";
    }
  } catch (error) {
    if (error instanceof Error) {
      console.error(error.message);
    }
  }
}
---

<div>
  <form
    netlify
    netlify-honeypot
    action="/success"
    autocomplete="off"
    method="POST"
  >
    <p class="hidden" style="display:none">
      <label>
        Don’t fill this out if you’re human: <input name="bot-field" />
      </label>
    </p>
    <input type="hidden" name="form-name" value="waitlist" />

    {errors.email && <p>{errors.email}</p>}
    <label for="email" class="cta">Join the waiting list</label>
    <div class="input-wrapper">
      <input
        autocomplete="false"
        aria-describedby="email:help"
        class="control"
        type="email"
        id="email"
        name="email"
        placeholder="Enter your email manually"
        required
      />
    </div>
    <small id="email:help" style="display:block; margin-bottom: 1.5rem">
      We'll let you know when we're ready to launch. No spam, we promise.
    </small>
    <button class="early-btn" type="submit" class="cta">Let's do this!</button>
  </form>
</div>

<style>
  div {
    text-align: center;
    margin-top: 2rem;
    padding-inline-start: 1rem;
    padding-inline-end: 1rem;
    width: 100%;
  }

  div .cta {
    display: block;
    font-size: 2.3rem;
    font-weight: bold;
    margin-bottom: 1rem;
  }

  .input-wrapper {
    display: flex;
    justify-content: center;
    margin-bottom: 1rem;
  }

  .control {
    border: 1px solid var(--n00bYellow);
    border-radius: 1.3rem;
    background-color: var(--wizardWhite);
    font-size: 1.2rem;
    height: 4rem;
    padding-inline-start: 2rem;
    padding-inline-end: 2rem;
    width: 100%;
  }

  .early-btn {
    align-items: center;
    border: none;
    background-color: var(--n00bYellow);
    border-radius: 2rem;
    display: inline-flex;
    color: var(--tpkBlack);
    font-size: 1.2rem;
    font-weight: bold;
    gap: 0.5rem;
    height: 4rem;
    justify-content: center;
    text-decoration: none;
    transition: background-color 0.2s ease-in-out;
    width: 100%;
  }

  a:hover {
    background-color: var(--manaBlue);
  }

  .icon {
    height: 1.5rem;
    width: 1.5rem;
  }

  @media (min-width: 768px) {
    div {
      padding-inline-start: 2rem;
      padding-inline-end: 2rem;
    }

    .early-btn {
      padding-inline-start: 4rem;
      padding-inline-end: 4rem;
      width: auto;
    }
  }
</style>
